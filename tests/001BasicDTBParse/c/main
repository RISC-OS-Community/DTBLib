/*
*/

#include <assert.h>

#include "LibDTB:krnllib.h"
#include "LibDTB:strlib.h"
#include "LibDTB:dtblib.h"
#include "main.h"

const char* load_dtb(const char* filename) {
    // Function to load a DTB file
    (void)filename;
    return NULL;
}

void test_simple_dtb(void) {
    const char* simple_dtb = load_dtb("simple.dtb"); // Function to load a DTB file
    char *string_block = (char *)krnl_malloc(1024);
    struct dt_node* root = parse_dtb(simple_dtb, string_block, 0);

    krnl_assert(root != NULL); // Replace with your own assert function
    krnl_assert(str_cmp(root->name, "root_node_name") == 0);

    // Further checks for children, properties, etc.

    krnl_free((void *)root); // Clean up
    krnl_free((void *)simple_dtb); // Function to free DTB data
}

int main(void) {
    test_simple_dtb();
    return 0;
}
